AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  SWITCHBOT Cloud Web API

Parameters:
  SWITCHBOTTOKEN:
    Type: String
    Default: ""

  SWITCHBOTSECRET:
    Type: String
    Default: ""

Metadata:
  AWS::ServerlessRepo::Application:
    Name: SwitchBotCloudWebApi
    Description: SwitchBot Cloud Web API
    Author: Roberto Serra
    SemanticVersion: 0.1.0

Resources:
  SwitchBotGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: dev
      Auth:
        DefaultAuthorizer: NONE
      Cors:
        AllowMethods: "'OPTIONS, GET'"
        AllowOrigin: "'*'"
        MaxAge: "'600'"
        AllowCredentials: False

  SwitchBotTriggerFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: SwitchBotTriggerFunction
      Timeout: 30
      CodeUri: src
      Handler: switch_bot_app.main.lambda_handler
      Runtime: python3.9
      Environment:
        Variables:
          LOG_LEVEL: INFO
          POWERTOOLS_SERVICE_NAME: SwitchBotTriggerFunction
          SWITCHBOT_TOKEN: !Ref SWITCHBOTTOKEN
          SWITCHBOT_SECRET: !Ref SWITCHBOTSECRET
      Role: !GetAtt SwitchBotTriggerRole.Arn
      Events:
        GetDevices:
          Type: Api
          Properties:
            Path: /devices
            Method: GET
            RestApiId:
              Ref: SwitchBotGatewayApi
        TriggerBot:
          Type: Api
          Properties:
            Path: /trigger/{device_id}/press
            Method: get
            RequestParameters:
              - method.request.path.device_id
            RestApiId:
              Ref: SwitchBotGatewayApi

  ApiGwAccountConfig:
    Type: "AWS::ApiGateway::Account"
    Properties:
      CloudWatchRoleArn: !GetAtt "LoggingRole.Arn"

  SwitchBotTriggerRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: StandardLambda
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: "*"

  LoggingRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "apigateway.amazonaws.com"
            Action: "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"

Outputs:
  ApiGatewayUrl:
    Description: "API Gateway Url"
    Value: !Sub "https://${SwitchBotGatewayApi}.execute-api.${AWS::Region}.amazonaws.com/dev/"
